event.generators.copula.targets.duplicate.reference=Doppelte Referenz innerhalb einer Copula nicht m\u00F6glich: Zielobjekt {0} ist zweimal gew\u00E4hlt.
event.generators.copula.targets.invalid.frequency.base=Event Generatoren nur anwendbar auf Sch\u00E4den mit absoluter H\u00E4ufigkeitsbasis : Generator {0} hat Basis {1} und ist nicht w\u00E4hlbar. Andere Basis w\u00E4hlen oder Objekt entfernen.
event.generators.copula.targets.invalid.frequency.modifier=Event Generatoren nur anwendbar auf Sch\u00E4den ohne Verteilungsmodifikation : Generator {0} hat Modifikation {1} und ist nicht w\u00E4hlbar. àndere Modifikation oder entferne Zielobjekt!
event.generators.copula.targets.invalid.frequency.distribution=H\u00E4ufigkeitsverteilungen der Copula Zielobjekte m\u00FCssen vom gleichen Type sein wie H\u00E4ufigkeitsverteilung des Event Generators: Schadengenerator {0} hat H\u00E4ufigkeitsverteilung {1}.
event.generators.constant.distribution.total.constant.smaller.than.systematic.constant=Konstante der Schadenfrequenzverteilung ist {0} aber muss gr\u00F6sser oder gleich der Konstante {1} des Event Generators sein.
event.generators.constants.distribution.total.min.observation.smaller.than.systematic.max.observation=Verteilung mit konstanten Werten: Kleinster Wert der Schadenfrequenzverteilung ist {0} aber muss gr\u00F6sser oder gleich der gr\u00F6ssten Konstante {1} des Event Generators sein.
event.generators.binomial.distribution.total.p.not.equal.to.systematic.p=Binomial Verteilung von Schaden- und Eventgenerator m\u00FCssen gleiches p haben: p des Schadengenerators ist {0}, p des Event Generators {1}.
event.generators.binomial.distribution.total.n.smaller.than.systematic.n=Binomial Verteilung von Schaden- und Eventgenerator: n des Schadengenerators ist {0}, aber muss gr\u00F6sser oder gleich sein wie n={1} im Event Generator.
event.generators.negative.binomial.distribution.total.p.not.equal.to.systematic.p=Negativ Binomial Verteilungen von Schaden- und Eventgeneratoren  m\u00FCssen gleiches p haben: p des Schadengenerators ist {0}, p des Event Generators {1}.
event.generators.negative.binomial.distribution.total.gamma.smaller.than.systematic.gamma=Negativ Binomial Verteilungen von Schaden- und Eventgeneratoren: gamma des Schadengenerators ist {0}, aber muss gr\u00F6sser oder gleich sein wie gamma={1} im Event Generator.
event.generators.poisson.distribution.total.lambda.smaller.than.systematic.lambda=Poisson Verteilung von Schaden- und Eventgeneratoren: lambda des Schadengenerators ist {0}, aber muss gr\u00F6sser oder gleich sein wie lambda={1} im Event Generator.
event.generators.discrete.empirical.distribution.total.min.observation.smaller.than.systematic.max.observation=Diskrete empirische Verteilung: Kleinste Beobachtung der Schadenfrequenzverteilung ist {0} aber muss gr\u00F6sser oder gleich der gr\u00F6ssten Beobachtng {1} des Event Generators sein.
event.generators.discrete.empirical.cumulative.distribution.total.min.observation.smaller.than.systematic.max.observation=Diskrete empirische kumulative Verteilung: Kleinste Beobachtung der Schadenfrequenzverteilung ist {0} aber muss gr\u00F6sser oder gleich der gr\u00F6ssten Beobachtng {1} des Event Generators sein.
event.generators.copula.targets.invalid.strategy=Event Generatoren nur anwendbar auf Sch\u00E4den mit Frequenzverteilung: Zielobjekt {0} mit Strategie {1} nicht w\u00E4hlbar. Andere Strategie w\u00E4hlen oder Objekt entfernen.